// <auto-generated />
using System;
using InAndOut.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InAndOut.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211124154150_addItemTypeTable")]
    partial class addItemTypeTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("InAndOut.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Borrower")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ItemTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ItemTypeId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("InAndOut.Models.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ItemType");
                });

            modelBuilder.Entity("InAndOut.Models.Item", b =>
                {
                    b.HasOne("InAndOut.Models.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId");

                    b.Navigation("ItemType");
                });
#pragma warning restore 612, 618
        }
    }
}
